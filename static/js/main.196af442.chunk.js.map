{"version":3,"sources":["api/BusApi.js","components/StationTime.js","store/reducers/home.js","components/BusStation.js","components/StationButton.js","components/Header.js","components/Home.js","Main.js","App.js","reportWebVitals.js","store/reducers/index.js","store/store.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","error","Promise","reject","response","url","method","StationTime","time","useSelector","state","homeInfoReducer","console","log","className","oneTime","oneStation","twoTime","twoStation","CH_HOME_STATION_TIME","initialState","action","type","data","BusStation","dispatch","useDispatch","useState","busRoute","setBusRoute","stationId","setStationId","setArrivalInfo","useEffect","busLocationInfo","busRouteInfo","busArrivalApi","a","BusApi","busData","elements","text","busDataProcessing","map","filter","name","String","join","check","busRouteData","busRouteDataProcessing","stationNameId","버스노선나누는함수","busArrivalData","busArrivalDataProcessing","busArrivalInfo","list","document","getElementsByClassName","Array","from","forEach","idx","value","tag","createElement","setAttribute","innerHTML","appendChild","onClick","index","style","indexOf","color","fontSize","marginBottom","StationButton","scrollIntoView","Header","Home","Main","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","createStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.196af442.chunk.js","sourcesContent":["import axios from \"axios\";\nimport * as URLs from '../const'\n\nconst instance = axios.create({\n  baseURL : \"\"\n});\n\ninstance.interceptors.request.use(\n  function (config) {\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  //에러코드 처리\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error)\n  }\n)\n\nexport default {\n  getTest() {\n    return instance({\n      url:\"/api/test\",\n      method:\"get\",\n    })\n  },\n\n  getBusData() {\n    return instance({\n      url:\"/api/busData\",\n      method:\"get\"\n    })\n  },\n  getBusRouteData() {\n    return instance({\n      url:\"/api/busRoute\",\n      method:\"get\"\n    })\n  },\n  getBusArrivalData() {\n    return instance({\n      url:\"/api/busArrival\",\n      method:\"get\"\n    })\n  }\n\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nfunction StationTime() {\n\n\n  const time = useSelector(state => state.homeInfoReducer)\n  console.log(\"time\",time.time);\n  return (\n    <div className=\"station_time\">\n      <div className=\"going_home\">떙떙역 첫번 째 버스 0분 후 도착 0정거장 전</div>\n      <div className=\"going_home\">떙떙역 두번 째 버스 0분 후 도착 0정거장 전</div>\n      <div className=\"going_company\">마전역 첫번 째 버스 {time.time.oneTime}분 후 도착 {time.time.oneStation}정거장 전</div>\n      <div className=\"going_company\">마전역 두번 째 버스 {time.time.twoTime}분 후 도착 {time.time.twoStation}정거장 전</div>\n    </div>\n  )\n}\n\nexport default StationTime\n","const CH_HOME_STATION_TIME = 'HOMEINFO/CH_HOME_STATION_TIME';\n\nexport const setHomeInfo = (type, data) => ({type, data});\n\nconst initialState = {\n  time : {\n    oneTime: \"\",\n    oneStation: \"\",\n    twoTime: \"\",\n    twoStation: \"\"\n  }\n}\n\nconst homeInfoReducer = (state = initialState , action) => {\n  switch (action.type) {\n    case CH_HOME_STATION_TIME:\n      return {\n        ...state,\n        time : {\n          oneTime: action.data.oneTime,\n          oneStation: action.data.oneStation,\n          twoTime: action.data.twoTime,\n          twoStation: action.data.twoStation\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport default homeInfoReducer;\n\n\n//2960 x 1440","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport BusApi from '../api/BusApi';\nimport StationTime from './StationTime';\nimport $ from \"jquery\";\n//import Main from './Main';\nimport { useDispatch } from 'react-redux';\nimport { setHomeInfo } from '../store/reducers/home';\n\nconst BusStation = () => {\n\n  const dispatch = useDispatch();\n\n  const [busLocation, setBusLocation] = useState(null);\n  const [busRoute, setBusRoute] = useState(null);\n  const [stationId, setStationId] = useState(null);\n  const [arrivalInfo, setArrivalInfo] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Test useEffect...\")\n      busLocationInfo();\n      busRouteInfo(false);\n      busArrivalApi();\n  },[])\n\n\n  //현재버스위치조회\n  const busLocationInfo = async () => {\n    \n    const busData = await BusApi.getBusData();\n    if(busData.data.elements[0].elements[1].elements[1].elements[0].text === \"0\"){\n      const busDataProcessing = busData?.data?.elements[0]?.elements[2]?.elements\n      const stationId = busDataProcessing?.map((data) => data.elements\n      .filter((data) => data.name === \"stationId\" )\n      .map((data) => data.elements\n      .map((data)=>data.text)))\n\n      //console.log(\"버스 실시간 조회 데이터 가공===>\",busDataProcessing?.map((data) => data.elements.map((data)=> data.elements.map((data) => data.text))));\n      //console.log(\"현재 stationId 조회\", String(stationId?.join([])));\n      //  console.log(\"버스 실시간 조회 데이터 가공2===>\",busDataProcessing.map((data) => data.elements));\n      setStationId(String(stationId?.join(\"\")))\n      console.log(\"stationId\",stationId )\n    }else {\n      console.log(\"error\");\n    }\n     //김포, 인천 routeId = 232000089\n      /******  데이터 순서\n        endBus : 막차여부 (0:일반, 1:막차)\n        lowPlate : 저상버스여부 (0:일반버스, 1: 저상버스)\n        plateNo : 차량번호\n        remainSeatCnt : 차량빈자리수 (-1:정보없음, 0~:빈자리 수)\n        routeId : 노선 아이디 (노서ID)\n        stationId : 정류소 아이디 (정류소ID)\n        stationSeq : 정류소 순번 (노선의 정류소 순번)\n      *******/\n  }\n  //경유정류소목록조회\n  const busRouteInfo = async (check) => {\n\n      const busRouteData = await BusApi.getBusRouteData();\n      if(busRouteData.data.elements[0].elements[1].elements[1].elements[0].text === \"0\"){\n        const busRouteDataProcessing = busRouteData.data.elements[0]?.elements[2].elements\n        //console.log(\"버스노선조회\", busRouteDataProcessing)\n        \n        const stationNameId = await busRouteDataProcessing\n        .map((data) => data.elements\n        .filter((data) => data.name === \"stationName\" || data.name === \"stationId\" )\n        .map((data) => data.elements\n        .map((data)=>data.text)))\n\n        setBusRoute(stationNameId);\n        if(check === false){\n          버스노선나누는함수();\n        }\n      }else {\n        console.log(\"error\");\n      }\n      \n  }\n\n  //도착정보조회\n  const busArrivalApi = async () => {\n    const busArrivalData = await BusApi.getBusArrivalData();\n\n    if(busArrivalData.data?.elements[0]?.elements[1]?.elements[1]?.elements[0]?.text === \"0\"){\n      const busArrivalDataProcessing = busArrivalData.data?.elements[0].elements[2]?.elements\n      const busArrivalInfo = await busArrivalDataProcessing\n      ?.map((data) => data.elements\n      .filter((data) => data.name === \"flag\" || data.name === \"locationNo1\" || data.name === \"locationNo2\" || data.name === \"predictTime1\" || data.name === \"predictTime2\" )\n      .map((data) => data.elements\n      .map((data)=>data.text)))\n      \n      setArrivalInfo(busArrivalInfo);\n      dispatch(setHomeInfo('HOMEINFO/CH_HOME_STATION_TIME',{\n        oneTime: busArrivalInfo[0][3],\n        oneStation: busArrivalInfo[0][1],\n        twoTime: busArrivalInfo[0][4],\n        twoStation: busArrivalInfo[0][2],\n      }))\n      console.log(\"time 버스도착정보조회 필요한 것만 추출\", busArrivalInfo);\n      console.log(\"time2 버스도착정보조회 필요한 것만 추출\", busArrivalDataProcessing);\n    }else {\n      console.log(\"error\")\n    }\n    //console.log(\"버스도착정보조회\", busArrivalDataProcessing);\n    // console.log(\"버스도착정보조회 데이터 가공===>\",busArrivalDataProcessing.map((data) => data.elements.map((data)=> data.elements.map((data) => data.text))));\n    //console.log(\"버스도착정보조회 필요한 것만 추출\", busArrivalInfo);\n    \n    /******  데이터 순서\n      -flag : 상태구분 (RUN:운행중, PASS:운행중, STOP:운행종료, WAIT:회차지대기)\n      -locationNo1 : 첫번째차량 위치정보 (현재 버스위치 -- 몇번째전 정류소)\n      -locationNo2 : 두번째차량 위치정보 (현재 버스위치 -- 몇번째전 정류소)\n      lowPlate1 : 첫번째차량 저상버스여부 (0:일반버스,1:저상버스)\n      lowPlate2 : 두번째차량 저상버스여부 (0:일반버스,1:저상버스)\n      -*plateNo1 : 첫번째 차량번호 (차량번호)\n      -*plateNo2 : 두번째 차량번호 (차량번호)\n      -predictTime1 : 첫번째차량 도착예상시간 (버스도착예정시간 -- 몇분 후 도착예정)\n      -predictTime2 : 두번째차량 도착예상시간 (버스도착예정시간 -- 몇분 후 도착예정)\n      remainSeatCnt1 : 첫번째차량 빈자리 수 (빈자리수 -- -1:정보없음, 0:빈자리 수)\n      remainSeatCnt2 : 두번째차량 빈자리 수 (빈자리수 -- -1:정보없음, 0:빈자리 수)\n      -routeId : 노선아이디 (노선ID)\n      -staOrder : 정류소 순번 (노선의 정류소순번)\n      -stationId : 정유소 아이디 (정류소 ID)\n    *******/\n  }\n\n  //새로고침\n  const reFresh = () => {\n    let checked = true;\n    busLocationInfo();\n    busRouteInfo(checked);\n    busArrivalApi();\n  }\n\n  const 버스노선나누는함수 = () => {\n    const list = document.getElementsByClassName(\"bus_station_list\");\n\n    Array.from(list).forEach(function(data,idx){\n      if(data.value === 167000093){\n        let tag = document.createElement('h1');\n        tag.className = \"station_turning\"\n        tag.setAttribute(\"style\",\"color:black\")\n        tag.innerHTML = \"전환점 입니다.\"\n        data.appendChild(tag);\n      }\n    })\n  }\n//  boxShadow:\"inset 0 -15px 0 #f3df4d\"\n\n  return (\n    <>\n      <div className=\"bus_station_main\">\n        <button className=\"refresh_button\"  onClick={reFresh}>새로고침</button>\n          <ul className=\"bus_station_box\">\n            {busRoute?.map((data,index) =>\n              <>\n                <li className=\"bus_station_list\" key={index} style={{...stationId?.indexOf(String(data[0])) !== -1 ? {color : \"red\",fontSize:\"20px\",marginBottom:\"20px\"} : {color : \"black\",fontSize:\"20px\", marginBottom:\"20px\"}}} name={data[1]} value={data[0]}>{data[1]}</li>\n              </>\n            )}\n          </ul>\n      </div>\n      \n    </>\n  );\n}\n\nexport default BusStation;\n","import React from 'react'\n\nfunction StationButton() {\n\n  const scrollMove = () => {\n    document.getElementsByClassName('station_turning')[0].scrollIntoView();\n  }\n  const scrollMove2 = () => {\n    document.getElementsByClassName('bus_station_main')[0].scrollIntoView();\n  }\n\n  return (\n      <div className=\"station_button\">\n        <button className=\"scroll_button\" onClick={scrollMove2}><span>작전역8번 출구 방면(집)</span></button>\n        <button className=\"scroll_button2\" onClick={scrollMove} ><span>학운2산업단지 방면(회사)</span></button>\n      </div>\n    \n  )\n}\n\nexport default StationButton;\n","import React from 'react'\nimport StationButton from './StationButton';\n\nfunction Header() {\n\n \n  return (\n    <>\n      <div className=\"header\">\n        <select>\n          <option value=\"추가예정\">추가예정</option>\n        </select>\n        <h1 className=\"title\">인천 경기 버스</h1>\n      </div>\n      <div>\n        <StationButton />\n      </div>\n    </>\n  )\n}\n\nexport default Header;\n","import React from 'react'\nimport BusStation from './BusStation'\nimport Header from './Header'\nimport StationTime from './StationTime'\n\nfunction Home() {\n  return (\n    <>\n      <Header/>\n      <StationTime />\n      <BusStation/>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\";\nimport { Route,Redirect, Switch } from \"react-router-dom\";\nimport BusStation from \"./components/BusStation\";\nimport Home from \"./components/Home\";\n\n\n\n\n\n\nconst Main = () => {\n  console.log(\"render\")\n\n  return (\n    <>\n    <div>\n      <Route path=\"/\" component={Home} />\n    </div>\n    </>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Route,Routes } from 'react-router-dom';\nimport Main from './Main';\n\nfunction App() {\n  return (\n <Router>\n      <Route component={Main} />\n </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport homeInfoReducer from \"./home\";\n\nexport default combineReducers({ homeInfoReducer })","import { createStore } from \"redux\";\nimport reducer from './reducers';\nexport default createStore(reducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}